---
# file: tasks/install-prometheus.yml
#
# Install Prometheus server.
#
# @see http://prometheus.io/docs/introduction/getting_started/
#

- block:

    - name: set internal variables for convenience
      set_fact:
        prometheus_subdir: "{{ prometheus_install_path }}/prometheus-{{ prometheus_version }}.{{ prometheus_platform_suffix }}"


    - name: set download url for versions >= 1.0.0
      set_fact:
        prometheus_tarball_url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.{{ prometheus_platform_suffix }}.tar.gz"
      when: prometheus_version | version_compare('1.0', '>=')

    - name: set download url for versions < 1.0.0
      set_fact:
        prometheus_tarball_url: "https://github.com/prometheus/prometheus/releases/download/{{ prometheus_version }}/prometheus-{{ prometheus_version }}.{{ prometheus_platform_suffix }}.tar.gz"
      when: prometheus_version | version_compare('1.0', '<')

    - name: set daemon dir for versions >= 0.16
      set_fact:
        prometheus_daemon_dir: "{{ prometheus_subdir }}"
      when: prometheus_version | version_compare('0.16', '>=')

    - name: set daemon dir for versions < 0.16 (OBSOLETE!)
      set_fact:
        prometheus_daemon_dir: "{{ prometheus_install_path }}"
      when: prometheus_version | version_compare('0.16', '<')

    - name: download and untar prometheus tarball
      unarchive:
        src: "{{ prometheus_tarball_url }}"
        dest: "{{ prometheus_install_path }}"
        copy: no

  when: prometheus_version != "git"


- block:

    - name: set internal variables for convenience
      set_fact:
        prometheus_git_url: "https://github.com/prometheus/prometheus.git"
        prometheus_src_path: "{{ prometheus_goroot }}/src/github.com/prometheus/prometheus"
        prometheus_daemon_dir: "{{ prometheus_install_path }}"

    - name: delete the prometheus build directory, if necessary
      file: path="{{ prometheus_src_path }}" state=absent
      when: prometheus_rebuild

    - name: clone the prometheus project src
      git:
        repo: "{{ prometheus_git_url }}"
        dest: "{{ prometheus_src_path }}"
        force: yes

    - name: build prometheus
      command: make build
      args:
        chdir: "{{ prometheus_src_path }}"
        creates: prometheus
      environment:
        GO15VENDOREXPERIMENT: 1
        GOROOT: "{{ prometheus_goroot }}"
        GOPATH: "{{ prometheus_gopath }}"
        PATH: "{{ ansible_env.PATH }}:{{ prometheus_goroot }}/bin:{{ prometheus_gopath }}/bin"

    - name: copy the built prometheus to the install path
      command: "cp -r {{ prometheus_src_path }}/{{ item }} {{ prometheus_install_path }}"
      with_items:
        - prometheus
        - promtool
        - consoles
        - console_libraries

  when: prometheus_version == "git"



- name: set permissions, owner and group
  file:
    path: "{{ prometheus_install_path }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "go-w"
    recurse: yes

- name: mkdir for config and data
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "u=rwx,g=rx,o="
  with_items:
    - "{{ prometheus_rule_path }}"
    - "{{ prometheus_file_sd_config_path }}"
    - "{{ prometheus_db_path }}"

- name: set prometheus variables
  copy: src="../files/etc-default-prometheus"  dest=/etc/default/prometheus

- name: copy INIT script to server for versions >= 2.0
  template: src="../templates/prometheus.v2.sysvinit.{{ ansible_os_family|lower }}.sh.j2"  dest="/etc/init.d/prometheus"  mode="a+x"
  when: prometheus_version | version_compare('2.0', '>=') or prometheus_version == "git"

- name: copy INIT script to server for versions < 2.0
  template: src="../templates/prometheus.sysvinit.{{ ansible_os_family|lower }}.sh.j2"  dest="/etc/init.d/prometheus"  mode="a+x"
  when: prometheus_version | version_compare('2.0', '<')

- name: reload systemctl
  shell: systemctl daemon-reload
  ignore_errors: yes

- name: set INIT status
  service: name=prometheus enabled=yes

- block: 
    - name: copy rule files from playbook's, if any for versions < 2.0
      copy:
        src: "{{ playbook_dir }}/{{ item.value.src }}"
        dest: "{{ prometheus_rule_path }}/{{ item.value.dest }}"
        validate: "{{ prometheus_daemon_dir }}/promtool check-rules %s"
      with_dict: '{{ prometheus_rule_files | default({}) }}'
      notify:
        - reload prometheus

    - name: copy prometheus main config file from role's default, if necessary for versions < 2.0
      template:
        src: "../templates/prometheus.yml.j2"
        dest: "{{ prometheus_config_path }}/prometheus.yml"
        validate: "{{ prometheus_daemon_dir }}/promtool check-config %s"
      when: prometheus_conf_main is not defined
      notify:
        - reload prometheus

    - name: copy prometheus main config file from playbook's, if any for versions < 2.0
      template:
        src: "{{ playbook_dir }}/{{ prometheus_conf_main }}"
        dest: "{{ prometheus_config_path }}/prometheus.yml"
        validate: "{{ prometheus_daemon_dir }}/promtool check-config %s"
      when: prometheus_conf_main is defined
      notify:
        - reload prometheus
  when: prometheus_version | version_compare('2.0', '<')

- block: 
    - name: copy rule files from playbook's, if anyfor versions >= 2.0
      copy:
        src: "{{ playbook_dir }}/{{ item.value.src }}"
        dest: "{{ prometheus_rule_path }}/{{ item.value.dest }}"
        validate: "{{ prometheus_daemon_dir }}/promtool check rules %s"
      with_dict: '{{ prometheus_rule_files | default({}) }}'
      notify:
        - reload prometheus

    - name: copy prometheus main config file from role's default, if necessaryfor versions >= 2.0
      template:
        src: "../templates/prometheus.yml.j2"
        dest: "{{ prometheus_config_path }}/prometheus.yml"
        validate: "{{ prometheus_daemon_dir }}/promtool check config %s"
      when: prometheus_conf_main is not defined
      notify:
        - reload prometheus

    - name: copy prometheus main config file from playbook's, if anyfor versions >= 2.0
      template:
        src: "{{ playbook_dir }}/{{ prometheus_conf_main }}"
        dest: "{{ prometheus_config_path }}/prometheus.yml"
        validate: "{{ prometheus_daemon_dir }}/promtool check config %s"
      when: prometheus_conf_main is defined
      notify:
        - reload prometheus
  when: prometheus_version | version_compare('2.0', '>=') or prometheus_version == "git"
