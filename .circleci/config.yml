#
# TODO: workspace or cache for build/test workflows
#       https://circleci.com/docs/2.0/jobs-steps/

version: 2
jobs:
  build_stable:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            # docker build  -f test/Dockerfile-ubuntu18.04      -t prometheus_bionic       .
            docker build  -f test/Dockerfile-ubuntu20.04      -t prometheus_focal        .
            docker build  -f test/Dockerfile-debian10         -t prometheus_buster       .
            # docker build  -f test/Dockerfile-ubuntu14.04      -t prometheus_trusty       .
            # docker build  -f test/Dockerfile-debian8          -t prometheus_jessie       .
            # docker build  -f test/Dockerfile-debian7          -t prometheus_wheezy       .
            # docker build  -f test/Dockerfile-centos7          -t prometheus_centos7      .

      - run:
          name: Validating the test results
          command: |
            # docker run  -v $(pwd):/data  prometheus_bionic
            docker run  -v $(pwd):/data  prometheus_focal
            docker run  -v $(pwd):/data  prometheus_buster
            # docker run  -v $(pwd):/data  prometheus_trusty
            # docker run  -v $(pwd):/data  prometheus_jessie
            # docker run  -v $(pwd):/data  prometheus_wheezy
            # docker run  -v $(pwd):/data  prometheus_centos7

            # grep '^node_boot_time'                            result-ubuntu18.04
            grep '^node_boot_time'                            result-ubuntu20.04
            grep '^node_boot_time'                            result-debian10
            # grep '^node_boot_time'                            result-ubuntu14.04
            # grep '^node_boot_time'                            result-debian8
            # grep '^node_boot_time'                            result-debian7
            # grep '^node_boot_time'                            result-centos7

            # grep '^prometheus_target_interval_length_seconds' result-ubuntu18.04
            grep '^prometheus_target_interval_length_seconds' result-ubuntu20.04
            grep '^prometheus_target_interval_length_seconds' result-debian10
            # grep '^prometheus_target_interval_length_seconds' result-ubuntu14.04
            # grep '^prometheus_target_interval_length_seconds' result-debian8
            # grep '^prometheus_target_interval_length_seconds' result-debian7
            # grep '^prometheus_target_interval_length_seconds' result-centos7

            # grep '^alertmanager_alerts' result-ubuntu18.04
            grep '^alertmanager_alerts' result-ubuntu20.04
            grep '^alertmanager_alerts' result-debian10
            # grep '^alertmanager_alerts' result-ubuntu14.04
            # grep '^alertmanager_alerts' result-debian8
            # grep '^alertmanager_alerts' result-debian7
            # grep '^alertmanager_alerts' result-centos7


  build_master_bionic:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            docker build  -f test/Dockerfile-ubuntu18.04-git  -t prometheus_bionic_git   .

      - run:
          name: Validating the test results
          command: |
            docker run  -v $(pwd):/data  prometheus_bionic_git

            echo "==> Validating the test results..."
            grep '^node_boot_time'                            result-ubuntu18.04-git
            grep '^prometheus_target_interval_length_seconds' result-ubuntu18.04-git
            grep '^alertmanager_alerts'                       result-ubuntu18.04-git


  build_master_xenial:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            docker build  -f test/Dockerfile-ubuntu16.04-git  -t prometheus_xenial_git   .

      - run:
          name: Validating the test results
          command: |
            docker run  -v $(pwd):/data  prometheus_xenial_git

            echo "==> Validating the test results..."
            grep '^node_boot_time'                            result-ubuntu16.04-git
            grep '^prometheus_target_interval_length_seconds' result-ubuntu16.04-git
            grep '^alertmanager_alerts'                       result-ubuntu16.04-git


  build_master_trusty:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            docker build  -f test/Dockerfile-ubuntu14.04-git  -t prometheus_trusty_git   .

      - run:
          name: Validating the test results
          command: |
            docker run  -v $(pwd):/data  prometheus_trusty_git

            echo "==> Validating the test results..."
            grep '^node_boot_time'                            result-ubuntu14.04-git
            grep '^prometheus_target_interval_length_seconds' result-ubuntu14.04-git
            grep '^alertmanager_alerts'                       result-ubuntu14.04-git


  build_master_jessie:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            docker build  -f test/Dockerfile-debian8-git      -t prometheus_jessie_git   .

      - run:
          name: Validating the test results
          command: |
            docker run  -v $(pwd):/data  prometheus_jessie_git

            echo "==> Validating the test results..."
            grep '^node_boot_time'                            result-debian8-git
            grep '^prometheus_target_interval_length_seconds' result-debian8-git
            grep '^alertmanager_alerts'                       result-debian8-git


  build_master_centos7:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            docker build  -f test/Dockerfile-centos7-git      -t prometheus_centos7_git  .

      - run:
          name: Validating the test results
          command: |
            docker run  -v $(pwd):/data  prometheus_centos7_git

            echo "==> Validating the test results..."
            grep '^node_boot_time'                            result-centos7-git
            grep '^prometheus_target_interval_length_seconds' result-centos7-git
            grep '^alertmanager_alerts'                       result-centos7-git



workflows:
  version: 2
  build_and_test:
    jobs:
      - build_stable
      # - build_master_bionic
      # - build_master_xenial
      # - build_master_trusty
      # - build_master_jessie
      # - build_master_centos7
      #- test:
      #    requires:
      #      - build
